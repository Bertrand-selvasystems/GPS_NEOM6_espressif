#ifndef GPS_H
#define GPS_H

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DEFINITION DES LIBRAIRIES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
#include <inttypes.h>  // Assurez-vous d'inclure cette bibliothèque pour PRIu32
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "driver/gpio.h"
#include "driver/uart.h"
#include "esp_log.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DEFINITION DES CONSTANTES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
#define UART_NUM UART_NUM_1
#define BUF_SIZE 1024
#define GPS_TAG "GPS_Module"
#define CONFIG_UART_TX_GPS (gpio_num_t) GPIO_NUM_3
#define CONFIG_UART_RX_GPS (gpio_num_t) GPIO_NUM_8
// gestion des erreurs
#define ESP_ERR_GPS_UART_PARAM_CONFIG_FAILED 0x3001
#define ESP_ERR_GPS_UART_SET_PIN_FAILED 0x3002
#define ESP_ERR_GPS_UART_DRIVER_INSTALL_FAILED 0x3003

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DEFINITION DES VARIBLES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Structure pour stocker les informations GPS
typedef struct {
  float latitude;
  float longitude;
  float altitude;
  float speed;
  int hour;
  int minute;
  int second;
  int day;
  int month;
  int year;
  bool valid;
} GPSData_t;

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// PROTOCOLE DES FONCTIONS
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Initialisation de l'UART pour le GPS
esp_err_t GPS_Init(uint32_t baud_rate, int tx_pin, int rx_pin);
// Fonction pour lire et parser les données GPS
bool GPS_ReadData(GPSData_t *gps_data);
// Fonction pour régler le taux de rafraichissement
esp_err_t GPS_SetUpdateRate(uint8_t rate_hz);
// Fonction pour la task
void gps_task(void *param);

#endif  // GPS_H
